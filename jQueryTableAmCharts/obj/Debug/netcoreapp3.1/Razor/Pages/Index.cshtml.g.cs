#pragma checksum "D:\Programming\jQueryTableAmChart\jQueryTableAmCharts\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "41569535a923de3482f9653341d0753c989d9b56"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(jQueryTableAmCharts.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace jQueryTableAmCharts.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Programming\jQueryTableAmChart\jQueryTableAmCharts\Pages\_ViewImports.cshtml"
using jQueryTableAmCharts;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"41569535a923de3482f9653341d0753c989d9b56", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0c2857576e192c027dbc36dde0fc8cb116cee9e", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\Programming\jQueryTableAmChart\jQueryTableAmCharts\Pages\Index.cshtml"
  
    ViewData["Title"] = "Salary Dashboard";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>

    #chartdiv {
        width: 100%;
        height: 350px;
    }
</style>

<div class=""text-center"">
    <h1 class=""display-4"">Salary Dashboard for the Umbrella Corporation</h1>
</div>

<br />

<div id=""chartdiv""></div>

<br />

<table id=""example"" class=""display"" style=""width:100%"">
    <thead>
        <tr>
            <th>Name</th>
            <th>Position</th>
            <th>Office</th>
            <th>Extn.</th>
            <th>Start date</th>
            <th>Salary</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th>Name</th>
            <th>Position</th>
            <th>Office</th>
            <th>Extn.</th>
            <th>Start date</th>
            <th>Salary</th>
        </tr>
    </tfoot>
</table>

<br />
<br />

<script>
$(document).ready(function () {
        $('#example').DataTable({
            ""ajax"": '../Data/arrays.txt'
        });
    });

    am4core.ready(function () {

        // Themes begin
        ");
            WriteLiteral(@"am4core.useTheme(am4themes_animated);
        // Themes end

        var container = am4core.create(""chartdiv"", am4core.Container);
        container.width = am4core.percent(100);
        container.height = am4core.percent(100);
        container.layout = ""horizontal"";


        var chart = container.createChild(am4charts.PieChart);
        // Add data
        chart.data = JSON.parse('");
#nullable restore
#line 72 "D:\Programming\jQueryTableAmChart\jQueryTableAmCharts\Pages\Index.cshtml"
                            Write(Html.Raw(Json.Serialize(Model.GetGraphData())));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"');

        // Add and configure Series
        var pieSeries = chart.series.push(new am4charts.PieSeries());
        pieSeries.dataFields.value = ""wpSalary"";
        pieSeries.dataFields.category = ""workPlace"";
        pieSeries.slices.template.states.getKey(""active"").properties.shiftRadius = 0;

        pieSeries.slices.template.events.on(""hit"", function (event) {
            selectSlice(event.target.dataItem);
        })

        var chart2 = container.createChild(am4charts.PieChart);
        chart2.width = am4core.percent(30);
        chart2.radius = am4core.percent(80);

        // Add and configure Series
        var pieSeries2 = chart2.series.push(new am4charts.PieSeries());
        pieSeries2.dataFields.value = ""value"";
        pieSeries2.dataFields.category = ""name"";
        pieSeries2.slices.template.states.getKey(""active"").properties.shiftRadius = 0;
        pieSeries2.labels.template.disabled = true;
        pieSeries2.ticks.template.disabled = true;
        pieSeries2.alig");
            WriteLiteral(@"nLabels = false;
        pieSeries2.events.on(""positionchanged"", updateLines);

        var interfaceColors = new am4core.InterfaceColorSet();

        var line1 = container.createChild(am4core.Line);
        line1.strokeDasharray = ""2,2"";
        line1.strokeOpacity = 0.5;
        line1.stroke = interfaceColors.getFor(""alternativeBackground"");
        line1.isMeasured = false;

        var line2 = container.createChild(am4core.Line);
        line2.strokeDasharray = ""2,2"";
        line2.strokeOpacity = 0.5;
        line2.stroke = interfaceColors.getFor(""alternativeBackground"");
        line2.isMeasured = false;

        var selectedSlice;

        function selectSlice(dataItem) {

            selectedSlice = dataItem.slice;

            var fill = selectedSlice.fill;

            var count = dataItem.dataContext.subData.length;
            pieSeries2.colors.list = [];
            for (var i = 0; i < count; i++) {
                pieSeries2.colors.list.push(fill.brighten(i * 2 / cou");
            WriteLiteral(@"nt));
            }

            chart2.data = dataItem.dataContext.subData;
            pieSeries2.appear();

            var middleAngle = selectedSlice.middleAngle;
            var firstAngle = pieSeries.slices.getIndex(0).startAngle;
            var animation = pieSeries.animate([{ property: ""startAngle"", to: firstAngle - middleAngle }, { property: ""endAngle"", to: firstAngle - middleAngle + 360 }], 600, am4core.ease.sinOut);
            animation.events.on(""animationprogress"", updateLines);

            selectedSlice.events.on(""transformed"", updateLines);
        }


        function updateLines() {
            if (selectedSlice) {
                var p11 = { x: selectedSlice.radius * am4core.math.cos(selectedSlice.startAngle), y: selectedSlice.radius * am4core.math.sin(selectedSlice.startAngle) };
                var p12 = { x: selectedSlice.radius * am4core.math.cos(selectedSlice.startAngle + selectedSlice.arc), y: selectedSlice.radius * am4core.math.sin(selectedSlice.startAngle + sele");
            WriteLiteral(@"ctedSlice.arc) };

                p11 = am4core.utils.spritePointToSvg(p11, selectedSlice);
                p12 = am4core.utils.spritePointToSvg(p12, selectedSlice);

                var p21 = { x: 0, y: -pieSeries2.pixelRadius };
                var p22 = { x: 0, y: pieSeries2.pixelRadius };

                p21 = am4core.utils.spritePointToSvg(p21, pieSeries2);
                p22 = am4core.utils.spritePointToSvg(p22, pieSeries2);

                line1.x1 = p11.x;
                line1.x2 = p21.x;
                line1.y1 = p11.y;
                line1.y2 = p21.y;

                line2.x1 = p12.x;
                line2.x2 = p22.x;
                line2.y1 = p12.y;
                line2.y2 = p22.y;
            }
        }

        chart.events.on(""datavalidated"", function () {
            setTimeout(function () {
                selectSlice(pieSeries.dataItems.getIndex(0));
            }, 1000);
        });


    }); // end am4core.ready()</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
